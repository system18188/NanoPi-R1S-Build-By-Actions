#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 Jolly <https://totoro.site>
# 
# <https://github.com/skytotwo/NanoPi-R1S-Build-By-Actions>
#
# Write by Jolly 2019/12/7
# last update at 2019/12/19

name: NanoPi-R1s H5 OpenWrt Lean Build

on:
  push:
    branches: 
      - master
    paths:
      - "r1s-h5-config"
  # schedule:
  #   - cron: 0 20 * * *
  release:
    types: [published]
env:
  SSH_ACTIONS: true

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo apt-get update
          sudo apt-get -y install bc build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk         
          
      - name: Install Repo
        run: |
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/
          
      - name: Download Source
        run: |
          mkdir friendlywrt-h5
          cd friendlywrt-h5
          repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master -m h5.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle
          repo sync -c --no-clone-bundle -j8
      
      - name: Merge UpStearm OpenWrt
        run: |          
          cd friendlywrt-h5
          . ../remove_unused_config.sh
          cat ../app_config.seed >> configs/config_h5
          echo '# CONFIG_V2RAY_COMPRESS_UPX is not set' >> configs/config_h5
          sed -i '/docker/Id;/containerd/Id;/runc/Id;/iptparser/Id' configs/config_h5 #fix compile error
          cd friendlywrt
          git config --local user.email "action@github.com" && git config --local user.name "GitHub Action"
          git remote add upstream https://github.com/coolsnowwolf/lede && git fetch upstream
          git rebase 90bb1cf9c33e73de5019686b8bd495f689e675a4^ --onto upstream/master -X theirs
          git checkout upstream/master -- feeds.conf.default
          sed -i '/exit/i\mv /etc/rc.d/S25dockerd /etc/rc.d/S92dockerd && sed -i "s/START=25/START=92/g" S92dockerd' package/lean/default-settings/files/zzz-default-settings
          sed -i '/uci commit luci/i\uci set luci.main.mediaurlbase="/luci-static/argon"' package/lean/default-settings/files/zzz-default-settings
          sed -i '/exit/i\chown -R root:root /usr/share/netdata/web' package/lean/default-settings/files/zzz-default-settings
          sed -i 's/option fullcone\t1/option fullcone\t0/' package/network/config/firewall/files/firewall.config
          sed -i '/8.8.8.8/d' package/base-files/files/root/setup.sh
          echo -e '\nDYC Build\n'  >> package/base-files/files/etc/banner
          
      - name: Mod luci
        run: |
          cd friendlywrt-h5/friendlywrt
          echo "\rsrc-git kenzo https://github.com/kenzok8/openwrt-packages\rsrc-git small https://github.com/kenzok8/small" >> feeds.conf.default
          ./scripts/feeds update -a && ./scripts/feeds install -a

      - name: SSH touch friendlywrt/.config
        uses: csexton/debugger-action@master
        if: env.SSH_ACTIONS == 'true'

      - name: Build OpenWrt
        run: |
          cd friendlywrt-h5/friendlywrt
          make defconfig && make download -j8
          make -s -j$(nproc) || make V=s -j1
          
      - name: Build SD img
        run: |
          cd friendlywrt-h5
          sed -i '130,150 {/build_friendlywrt/d}' scripts/build.sh
          ./build.sh nanopi_r1s.mk
      
      - name: Zip Files
        run: |
          find friendlywrt-h5/out/ -name "FriendlyWrt_*img*" | xargs -i zip -r {}.zip {}
          
      - name: Assemble Artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find friendlywrt-h5/out/ -name "FriendlyWrt_*img.zip*" | xargs -i mv -f {} ./artifact/
      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: FriendlyWrt_NanoPi-R1S H5 Lean
          path: ./artifact/
